@using HammadBroker.Model
@model HammadBroker.Model.DTO.BuildingToUpdate

@{
	ViewData["Title"] = "تعديل مبنى";
}

<form asp-area="Admin" asp-controller="Buildings" asp-action="Edit" Method="post" enctype="multipart/form-data">
	<input type="hidden" asp-route-id="@Context.Request.Query["id"]" />
	<div class="card card-body mt-3">
		<div asp-validation-summary="ModelOnly"></div>

		<img-asset name="ImageFile" src="@Model.ImageUrl" class="img-placeholder" imageclass="img-fluid rounded mx-auto d-block"/>
		<input type="hidden" asp-for="ImageUrl"/>
		<div class="form-floating mb-1">
			<input class="form-control" asp-for="Name" placeholder="@Html.DisplayNameFor(e => Model.Name)"/>
			<label class="form-label" asp-for="Name"></label>
			<span asp-validation-for="Name" class="text-danger"></span>
		</div>
		<div class="form-floating mb-1">
			<input class="form-control" asp-for="VideoUrl" placeholder="@Html.DisplayNameFor(e => Model.VideoUrl)"/>
			<label class="form-label" asp-for="VideoUrl"></label>
			<span asp-validation-for="VideoUrl" class="text-danger"></span>
		</div>
		<div class="form-floating mb-1">
			<select asp-for="BuildingType" class="form-select" asp-items="Html.GetEnumSelectList<BuildingType>()">
			</select>
			<label class="form-label" asp-for="BuildingType"></label>
			<span asp-validation-for="BuildingType" class="text-danger"></span>
		</div>
		<div class="form-floating mb-1">
			<select asp-for="FinishingType" class="form-select" asp-items="Html.GetEnumSelectList<FinishingType>()">
				<option value=""></option>
			</select>
			<label class="form-label" asp-for="FinishingType"></label>
			<span asp-validation-for="FinishingType" class="text-danger"></span>
		</div>
		<div class="form-floating mb-1">
			<input class="form-control" asp-for="Floor" placeholder="@Html.DisplayNameFor(e => Model.Floor)"/>
			<label class="form-label" asp-for="Floor"></label>
			<span asp-validation-for="Floor" class="text-danger"></span>
		</div>
		<div class="form-floating mb-1">
			<input class="form-control" asp-for="Rooms" placeholder="@Html.DisplayNameFor(e => Model.Rooms)"/>
			<label class="form-label" asp-for="Rooms"></label>
			<span asp-validation-for="Rooms" class="text-danger"></span>
		</div>
		<div class="form-floating mb-1">
			<input class="form-control" asp-for="Bathrooms" placeholder="@Html.DisplayNameFor(e => Model.Bathrooms)" />
			<label class="form-label" asp-for="Bathrooms"></label>
			<span asp-validation-for="Bathrooms" class="text-danger"></span>
		</div>
		<div class="form-floating mb-1">
			<input class="form-control" asp-for="Area" placeholder="@Html.DisplayNameFor(e => Model.Area)"/>
			<label class="form-label" asp-for="Area"></label>
			<span asp-validation-for="Area" class="text-danger"></span>
		</div>
		<div class="form-floating mb-1">
			<input class="form-control" asp-for="Address" placeholder="@Html.DisplayNameFor(e => Model.Address)"/>
			<label class="form-label" asp-for="Address"></label>
			<span asp-validation-for="Address" class="text-danger"></span>
		</div>
		<div class="form-floating mb-1">
			<input class="form-control" asp-for="Address2" placeholder="@Html.DisplayNameFor(e => Model.Address2)"/>
			<label class="form-label" asp-for="Address2"></label>
			<span asp-validation-for="Address2" class="text-danger"></span>
		</div>
		<div class="form-floating mb-1">
			<select class="form-select" asp-for="CountryCode" asp-items="Model.Countries.Select(e => new SelectListItem(e.Name, e.Id, e.Id == Model.CountryCode))"
					onchange="populateCities(event.target.value)">
				<option value=""></option>
			</select>
			<label class="form-label" asp-for="CountryCode"></label>
			<span asp-validation-for="CountryCode" class="text-danger"></span>
		</div>
		<div class="form-floating mb-1">
			<select class="form-select" asp-for="CityId" asp-items="Model.Cities.Select(e => new SelectListItem(e.Name, e.Id.ToString(), e.Id == Model.CityId))">
				<option value=""></option>
			</select>
			<label class="form-label" asp-for="CityId"></label>
			<span asp-validation-for="CityId" class="text-danger"></span>
		</div>
		<div class="form-floating mb-1">
			<textarea class="form-control" asp-for="Description" rows="5" placeholder="@Html.DisplayNameFor(e => Model.Description)">
			</textarea>
			<label class="form-label" asp-for="Description"></label>
			<span asp-validation-for="Description" class="text-danger"></span>
		</div>
		<div class="mb-1">
			<button type="submit" class="btn btn-outline-primary border-0">تعديل</button>
		</div>
	</div>
</form>

@section scripts
{
	<script type="text/javascript">
		async function populateCities(countryCode) {
			const citiesDropDown = $("#@nameof(Model.CityId)");
			citiesDropDown.empty();
			if (!countryCode) return;

			try {
				const url = `@Url.Action("List", "Cities", new
									 {
										 area = "Admin"
									 }, Context.Request.Scheme)?countryCode=${encodeURIComponent(countryCode)}`;
				const response = await fetch(url);

				if (!response.ok) {
					alert(response.message || response.status);
					return;
				}

				const cities = await response.json();
				citiesDropDown.append("<option value=''></option>");

				for (const city of cities) {
					citiesDropDown.append(`<option value='${city.id}'>${city.name}</option>`);
				}
			} catch (e) {
				alert(e.message || e);
			}
		}
	</script>
}
