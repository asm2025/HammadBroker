@using HammadBroker.Model.DTO
@model CitiesPaginated
@{
	ViewData["Title"] = "المدن";
	bool showCountry = string.IsNullOrEmpty(Model.CountryCode);
}

<form class="row row-cols-lg-auto g-3 align-items-center" method="get" asp-area="Admin" asp-controller="Cities" asp-action="Index">
	<div class="col form-floating mb-3">
		@Html.DropDownListFor(e => e.CountryCode, Model.Countries.Select(e => new SelectListItem(e.Name, e.Id, e.Id == Model.CountryCode)),  string.Empty , new { @class = "form-select" })
		<label class="form-label" asp-for="CountryCode"></label>
	</div>
	<div class="col form-floating mb-3">
		<input class="form-control" asp-for="Search" placeholder="@Html.DisplayNameFor(E => Model.Search)" />
		<label class="form-label" asp-for="Search"></label>
	</div>
	<div class="col mb-3">
		<button type="submit" class="btn btn-outline-primary"><span class="fa fa-magnifying-glass"></span></button>
		<a href="#" onclick="JavaScript:addCity();" class="btn btn-outline-primary"><i class="fa fa-plus"></i></a>
	</div>
</form>
<div class="row table-responsive">
	<table class="table table-borderless">
		<thead>
		<tr>
			<th scope="col"></th>
			@if (showCountry)
			{
			<th scope="col">البلد</th>
			}
			<th scope="col">المدينة</th>
		</tr>
		</thead>
		<tbody>
		@foreach (CityForList city in Model.Result)
		{
			<tr>
				<th scope="row">
					<a class="btn btn-outline-primary mb-1" asp-area="Admin" asp-action="Edit" asp-route-id="@city.Id">
						<i class="fa fa-pen"></i>
					</a>
					<a class="btn btn-outline-danger mb-1" onclick="JavaScript:deleteCity(@city.Id, '@city.Name');">
						<i class="fa fa-trash"></i>
					</a>
				</th>
				@if (showCountry)
				{
				<td>@city.CountryCode</td>
				}
				<td>@city.Name</td>
			</tr>
		}
		</tbody>
	</table>
</div>
<partial name="_PaginationPartial" model="Model.Pagination" />

@section scripts
{
	<script type="text/javascript">
		function addCity() {
			const url = '@Url.Action("Add", "Cities", null, Context.Request.Scheme)';
			const params = new URLSearchParams({
				countryCode: document.getElementById("CountryCode").value
			});
			window.location.href = url + '?' + params.toString();
		}

		function deleteCity(id, name) {
			if (!confirm(`هل تريد حذف مدينة '${name}'?`)) return;
			const url = '@Url.Action("Delete", "Cities", null, Context.Request.Scheme)';
			const params = new URLSearchParams({
				id
			});
			fetch(url + '?' + params.toString(), { method: "DELETE" })
				.then(async response => {
					if (!response.ok) {
						const isJson = response.headers.get('content-type')?.includes('application/json');
						const data = isJson && await response.json();
						const error = (data && data.message) || response.status;
						alert(error);
					}
					location.reload();
				});
		}
	</script>
}